{"version":3,"sources":["types/FilterStatus.ts","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["FilterStatus","TodoList","todos","selectedTodo","setSelectedTodo","className","map","todo","id","completed","title","cn","type","onClick","TodoFilter","query","setQuery","selectedStatus","setSelectedStatus","onChange","event","target","value","style","textTransform","Object","values","status","placeholder","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","handleCloseModal","useState","user","setUser","isLoadingModal","setIsLoadingModal","userId","useEffect","getUser","userData","finally","href","email","name","App","setTodos","todosError","setTodosError","ALL","isLoading","setIsLoading","filteringTodos","useMemo","filteredTodos","normalizeQuery","trim","toLowerCase","filter","includes","ACTIVE","COMPLETED","catch","error","message","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.801d75b1.chunk.js","sourcesContent":["export enum FilterStatus {\n  ALL = 'all',\n  ACTIVE = 'active',\n  COMPLETED = 'completed',\n}\n","import React from 'react';\nimport cn from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[];\n  selectedTodo: Todo | null,\n  setSelectedTodo: (value: Todo) => void,\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  selectedTodo,\n  setSelectedTodo,\n}) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {todos.map(todo => {\n        const { id, completed, title } = todo;\n\n        return (\n          <tr\n            key={id}\n            data-cy=\"todo\"\n            className={cn({\n              'has-background-info-light': selectedTodo?.id === todo.id,\n            })}\n          >\n            <td className=\"is-vcentered\">\n              {todo.id}\n            </td>\n            <td className=\"is-vcentered\">\n              {todo.completed && (\n                <span className=\"icon\" data-cy=\"iconCompleted\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              )}\n            </td>\n            <td className=\"is-vcentered is-expanded\">\n              <p className={cn({\n                'has-text-danger': !completed,\n                'has-text-success': completed,\n              })}\n              >\n                {title}\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => setSelectedTodo(todo)}\n              >\n\n                <span className=\"icon\">\n                  <i className={cn('far', {\n                    'fa-eye': selectedTodo?.id !== id,\n                    'fa-eye-slash': selectedTodo?.id === id,\n                  })}\n                  />\n                </span>\n              </button>\n            </td>\n          </tr>\n        );\n      })}\n    </tbody>\n  </table>\n);\n","/* eslint-disable max-len */\nimport { FilterStatus } from '../../types/FilterStatus';\n\ntype Props = {\n  query: string,\n  setQuery: (value: string) => void,\n  selectedStatus: string,\n  setSelectedStatus: (value: FilterStatus) => void,\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  query,\n  setQuery,\n  selectedStatus,\n  setSelectedStatus,\n}) => {\n  const handleQuery = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setQuery(event.target.value);\n  };\n\n  const handleSelectedStatus = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setSelectedStatus(event.target.value as FilterStatus);\n  };\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            onChange={handleSelectedStatus}\n            style={{ textTransform: 'capitalize' }}\n            value={selectedStatus}\n          >\n            {Object.values(FilterStatus).map(status => (\n              <option\n                value={status}\n                key={status}\n              >\n                {status}\n              </option>\n            ))}\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={handleQuery}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {query && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => setQuery('')}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useState, useEffect } from 'react';\nimport cn from 'classnames';\n\nimport { Loader } from '../Loader';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { getUser } from '../../api';\n\ntype Props = {\n  selectedTodo: Todo,\n  handleCloseModal: () => void,\n};\n\nexport const TodoModal: React.FC<Props> = ({\n  selectedTodo,\n  handleCloseModal,\n}) => {\n  const [user, setUser] = useState<User>();\n  const [isLoadingModal, setIsLoadingModal] = useState(true);\n\n  const {\n    id,\n    userId,\n    title,\n    completed,\n  } = selectedTodo;\n\n  useEffect(() => {\n    getUser(userId)\n      .then((userData) => setUser(userData))\n      .finally(() => setIsLoadingModal(false));\n  }, [userId]);\n\n  const status = completed ? 'Done' : 'Planned';\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {isLoadingModal ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={handleCloseModal}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              <strong className={cn({\n                'has-text-danger': !completed,\n                'has-text-success': completed,\n              })}\n              >\n                {status}\n              </strong>\n\n              {' by '}\n\n              <a href={`mailto:${user?.email}`}>\n                {user?.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useState, useEffect, useMemo } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { FilterStatus } from './types/FilterStatus';\nimport { Todo } from './types/Todo';\nimport { getTodos } from './api';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [todosError, setTodosError] = useState('');\n  const [query, setQuery] = useState('');\n  const [selectedStatus, setSelectedStatus] = useState(FilterStatus.ALL);\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n  const [isLoading, setIsLoading] = useState(true);\n\n  const filteringTodos: Todo[] = useMemo(() => {\n    let filteredTodos = [...todos];\n\n    if (query) {\n      const normalizeQuery = query.trim().toLowerCase();\n\n      filteredTodos = filteredTodos.filter(todo => todo.title.toLowerCase().includes(normalizeQuery));\n    }\n\n    switch (selectedStatus) {\n      case FilterStatus.ACTIVE:\n        return filteredTodos.filter(todo => todo.completed === false);\n        break;\n      case FilterStatus.COMPLETED:\n        return filteredTodos.filter(todo => todo.completed === true);\n        break;\n\n      default:\n        return filteredTodos;\n    }\n  }, [todos, query, selectedStatus]);\n\n  const handleCloseModal = () => {\n    setSelectedTodo(null);\n  };\n\n  useEffect(() => {\n    getTodos()\n      .then(setTodos)\n      .catch((error) => setTodosError(error.message))\n      .finally(() => setIsLoading(false));\n  }, []);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                query={query}\n                setQuery={setQuery}\n                selectedStatus={selectedStatus}\n                setSelectedStatus={setSelectedStatus}\n              />\n            </div>\n\n            <div className=\"block\">\n              {isLoading ? (\n                <Loader />\n              ) : (\n                <TodoList\n                  todos={filteringTodos}\n                  selectedTodo={selectedTodo}\n                  setSelectedTodo={setSelectedTodo}\n                />\n              )}\n\n              {todosError && (\n                <p>{todosError}</p>\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo && (\n        <TodoModal\n          selectedTodo={selectedTodo}\n          handleCloseModal={handleCloseModal}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}